/* lecture 04 app.css */

/* rgb 0-255 */

/* визначити для усіх елементів h1,
h2,
h3 на веб-сторінці властивість колір тексту = сірий. */

h1,
h2,
h3 {
  color: gray;
}

/* вибрати елемент з ідентифікатором main, визначити для нього властивість color: #e60202 */

main {
  color: #e60202;
}
/* вибрати елементи з класом h2, визначити для нього властивість color: червоний */
.h2 {
  color: #f52222;
}

/* Виділити всі елементи з класом heading та встановити для них колір тексту у зелений */

.heading {
  color: green;
}

/* - виберіть елементи, які є прямими дочірніми елементами батьківського елемента ul та встановіть для них властивість font-weight: bold. --> */

ul > li {
  font-weight: bold;
}

/* Відредагуйте файл css */

section > p {
  color: red;
}
/* 
- Чи зміниться колір тексту p всередині елемента div? Ні не зміниться, тому що р є дочкою батька div, а не section  */

/* - змінити розмір шрифту всіх елементів p всередині елемента section, незалежно від їхнього рівня вкладеності. */

section {
  font-size: 1.5rem;
}

/* - змінити колір тексту на indigo першого елемента h2, а не всіх елементів h2. */

.h2-only {
  color: aqua;
}

/* - застосувати до всіх посилань, нащадкам p.first властивість color: green 
- стилізувати посилання з властивістю color: green, що розташовані всередині будь-якого тегу з класом .first, що є нащадком елементу p */

p.first a {
  color: green;
}

p .first a {
  color: green;
}

/* - створити стиль color: salmon для всіх елементів p, що стоять після елемента div. */

div ~ p {
  color: salmon;
}

/* Маємо іменовані кольори black, blue, green, red, white, yellow
визначати ці кольори за допомогою шістнадцяткового коду: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.
визначати ці кольори у десятковій системі числення за допомогою функції RGB.
визначати ці кольори, використовуючи відсотки.
визначати ці кольори використовуючи альфа-канал, що задає прозорість.
color black: #000000; rgb (000, 000, 000); hsl(0, 0%, 0%); rgb(0 0 0 / 0.5)
color blue: #0000ff;  rgb (000, 000, 255); hsl(240, 100%, 50%); rgb(0 0 255 / 0.5)
color green: #008000;  rgb (000, 255, 000); hsl(120, 50%, 50%); rgb(0 255 0 / 0.5)
color red: #ff0000;  rgb (255, 000, 000); hsl(0, 100%, 50%); rgb(255 0 0 / 0.5)
color white: #ffffff;  rgb (255, 255, 255); hsl(0, 100%, 100%); rgb(255 255 255 / 0.5)
color yellow: #ffff00; rgb(255, 255, 000); hsl(60, 100%, 50%); rgb(255 255 0 / 0.5) */

/* - Використовцючи hsl, створіть для класу translucent-box напівпрозору властивість background з такими значеннями:
    - Hue = 0deg
    - Saturate =  100%
    - Lightness =  50% */

.translucent-box {
  color: hsl(0deg, 100%, 50%, 0.5);
}

/* базовий розмір шрифта для кореневого елемента = 100%
визначити розмір шрифта для body, що успадковує розмір шрифта кореневого елемента, збільшений на 40 відсотків
визначити розмір шрифта для h1, що успадковує розмір шрифта кореневого елемента, збільшений на 140 відсотків */

body {
  font-size: 0.4rem;
}

h1 {
  font-size: 1.4rem;
}

/* .named {
  color: aliceblue;
  background-color: indianred;
  font-size: 1.5rem;
} */

/* .rgp {
  color: rgb(200, 100, 0);
  font-size: 0.5rem;
} */

/* .rgp span {
  font-size: 3em;
} */

/* .hex {
  /* 0 1 2 3 4 5 6 7 8 9 a b c d e f */
/* color: #ffff00; */
/* font-size: 5ex;
} */

/* .transp {
  /* color: rgba(0, 0, 255, 0.5); */
/* color: rgb(0 0 255 / 0.5);
  font-size: 4.5ch;
} */

/* .hsl {
  color: hsl(9deg, 100%, 50%);
  /* font-size: 4.5in; */
/* font-size: 4vh;
} */
